#!/bin/bash
# This script provides dependencies for an app

set -euo pipefail

BUILD_DIR=$1
CACHE_DIR=$2
DEPS_DIR=$3
DEPS_IDX=$4
export BUILDPACK_DIR=`dirname $(readlink -f ${BASH_SOURCE%/*})`

binary_file="opa"
config_file="opa_config.yml"
start_file="start_opa.sh"

rt_deps="../deps/$DEPS_IDX/"
dt_deps="$DEPS_DIR/$DEPS_IDX/"
opa_binary="$dt_deps$binary_file"
opa_config="$dt_deps$config_file"
log_level="debug"
opa_start="$dt_deps$start_file"
opa_port="9888"


wget https://github.com/open-policy-agent/opa/releases/download/v0.16.2/opa_linux_amd64 -q -O "$opa_binary"
chmod +x "$opa_binary"

cp "$BUILDPACK_DIR/scripts/start_opa.sh" "$opa_start"
chmod +x "$opa_start"

mkdir -p "$BUILD_DIR/.profile.d"

echo "export opa_binary=$rt_deps$binary_file opa_config=$rt_deps$config_file log_level=$log_level OPA_START=$rt_deps$start_file OPA_URL=http://localhost:$opa_port/ OPA_PORT=$opa_port" > "$BUILD_DIR/.profile.d/0000_opa_env.sh"
chmod +x "$BUILD_DIR/.profile.d/0000_opa_env.sh"

if ! [ -z VCAP_SERVICES ] && bundle_provider=$(echo VCAP_SERVICES|jq '.ams[0].url' ) ; then
  bundle_path="cas/v1/bundle.tar.gz"
else
  if [ -z $BUNDLE_PATH ] || [ -z $BUNDLE_PROVIDER ] ; then 
    >&2 echo "No ams service instance found in VCAP_SERVICES. If you want to use this buildpack without ams servcie instance, please provide BUNDLE_PROVIDER and BUNDLE_PATH in env"
  fi
  bundle_path="$BUNDLE_PATH"
  bundle_provider="$BUNDLE_PROVIDER"
fi

cat > "$opa_config" <<EOL
---
services:
  bundle-provider:
    url: $bundle_provider
    credentials:
      client_tls:
        cert: $CF_INSTANCE_CERT
        private_key: $CF_INSTANCE_KEY
bundles:
  authz:
    service: bundle-provider
    resource: $bundle_path 
    polling:
      min_delay_seconds: 10
      max_delay_seconds: 180
EOL

