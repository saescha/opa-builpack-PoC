#!/bin/bash
# This script provides dependencies for an app

set -euo pipefail

BUILD_DIR=$1
#CACHE_DIR=$2
DEPS_DIR=$3
DEPS_IDX=$4

find $BUILD_DIR
export BUILDPACK_DIR=`dirname $(readlink -f ${BASH_SOURCE%/*})`

binary_file="opa"
config_file="opa_config.yml"
start_file="start_opa.sh"

rt_deps="../deps/$DEPS_IDX/"
dt_deps="$DEPS_DIR/$DEPS_IDX/"
opa_binary="$dt_deps$binary_file"
opa_config="$dt_deps$config_file"
log_level="debug"
opa_start="$dt_deps$start_file"
opa_port="9888"

print_form() {
  for file in "$BUILD_DIR./cas/*"
  do
    echo "--form 'data=@$file'"
  done;
  
}

wget https://github.com/open-policy-agent/opa/releases/download/v0.16.2/opa_linux_amd64 -q -O "$opa_binary"
chmod +x "$opa_binary"

cp "$BUILDPACK_DIR/scripts/start_opa.sh" "$opa_start"
chmod +x "$opa_start"

mkdir -p "$BUILD_DIR/.profile.d"
echo "creating $BUILD_DIR/.profile.d/0000_opa_env.sh"
echo "export opa_binary=$rt_deps$binary_file opa_config=$rt_deps$config_file log_level=$log_level OPA_START=$rt_deps$start_file OPA_URL=http://localhost:$opa_port/ OPA_PORT=$opa_port" > "$BUILD_DIR/.profile.d/0000_opa_env.sh"
cat "$BUILD_DIR/.profile.d/0000_opa_env.sh"
chmod +x "$BUILD_DIR/.profile.d/0000_opa_env.sh"


if [ -n "${VCAP_SERVICES+x}" ] && ams_creds=$(echo "$VCAP_SERVICES"|jq -e '.ams[0].credentials' ) ; then

echo "uploading auth stuff"
curl --location --request POST "$(echo "$ams_creds" | jq '.url' )" --cert "$CF_INSTANCE_CERT" --key "$CF_INSTANCE_KEY" "$(print_form)"

cat <<- eof > "$opa_config"
---
services:
  bundle-provider:
    url: "$(echo "$ams_creds" | jq '.url' )"
    credentials:
      client_tls:
        cert: $CF_INSTANCE_CERT
        private_key: $CF_INSTANCE_KEY
discovery:
  name: ams/discovery
  resource: sap/cas/v1/bundles/discovery.tar.gz
eof

else

>&2 echo "No ams service found."
exit 1
fi

echo "writing launch.yml"

cat <<- eof > "$dt_deps/launch.yml"
---
processes:
- type: "opa"
  command: "$rt_deps$start_file"
  limits:
    memory: 100
  platforms:
    cloudfoundry:
      sidecar_for: [ "web" ]
eof
